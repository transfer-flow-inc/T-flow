<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\dashboard-all-providers\dashboard-all-providers.component.spec.ts">
    <testCase name="DashboardAllProvidersComponent should create" duration="276"/>
    <testCase name="DashboardAllProvidersComponent should update logos based on theme" duration="43"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\settings-all-transfer\settings-all-transfer.component.spec.ts">
    <testCase name="SettingsAllTransferComponent should create the component" duration="133"/>
    <testCase name="SettingsAllTransferComponent should initialize user ID from JwtTokenService" duration="20"/>
    <testCase name="SettingsAllTransferComponent should load all folders when initialized" duration="16"/>
    <testCase name="SettingsAllTransferComponent should set error message when API call fails" duration="14"/>
    <testCase name="SettingsAllTransferComponent should correctly check if a folder is expired" duration="13"/>
    <testCase name="SettingsAllTransferComponent should handle empty folder data correctly" duration="16"/>
    <testCase name="SettingsAllTransferComponent should handle valid folder data correctly" duration="12"/>
    <testCase name="SettingsAllTransferComponent should handle if folder data is null correctly" duration="13"/>
    <testCase name="SettingsAllTransferComponent should delete a folder and remove it from the list when the API call is successful" duration="17"/>
    <testCase name="SettingsAllTransferComponent should handle errors when the API call fails" duration="18"/>
    <testCase name="SettingsAllTransferComponent should return size in Ko" duration="10"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\navbar\navbar.component.spec.ts">
    <testCase name="NavbarComponent should create the component" duration="149"/>
    <testCase name="NavbarComponent should toggle isPopupOpen and update popupToggleValue" duration="30"/>
    <testCase name="NavbarComponent should toggle isMenuOpen and update navbarToggleValue and iconShow" duration="29"/>
    <testCase name="NavbarComponent should initialize isAuthenticated based on HttpClientService" duration="136"/>
    <testCase name="NavbarComponent should initialize isAdministrator based on JwtTokenService and CookiesService" duration="34"/>
    <testCase name="NavbarComponent should initialize isDarkTheme and imgTheme based on localStorage" duration="20"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\app.component.spec.ts">
    <testCase name="AppComponent should handle the theme correctly" duration="241"/>
    <testCase name="AppComponent should log console warnings" duration="44"/>
    <testCase name="AppComponent should clear auth data" duration="39"/>
    <testCase name="AppComponent should handle route titles correctly" duration="26"/>
    <testCase name="AppComponent should lauch logWarning on init" duration="38"/>
    <testCase name="AppComponent should set isAuthenticated to true if token is present" duration="39"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\register\register.component.spec.ts">
    <testCase name="RegisterComponent should create" duration="315"/>
    <testCase name="RegisterComponent should handle 403 error correctly" duration="47"/>
    <testCase name="RegisterComponent should handle non-403 error correctly" duration="41"/>
    <testCase name="RegisterComponent should call signInWithGoogle on googleSsoService when signInWithGoogle is called" duration="40"/>
    <testCase name="RegisterComponent should toggle isChecked when changeIsChecked is called" duration="36"/>
    <testCase name="RegisterComponent should handle OAuthEvent of type &quot;token_received&quot;" duration="65"/>
    <testCase name="RegisterComponent should call performRegistration when register is called and isChecked is true" duration="36"/>
    <testCase name="RegisterComponent should call httpClientService.register when performRegistration is called" duration="48"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\flash-message\flash-message.component.spec.ts">
    <testCase name="FlashMessageComponent should create" duration="245"/>
    <testCase name="FlashMessageComponent should subscribe to getMessage from FlashMessageService" duration="19"/>
    <testCase name="FlashMessageComponent should start animation when flash message is received" duration="19"/>
    <testCase name="FlashMessageComponent should delete flash message after duration" duration="1116"/>
    <testCase name="FlashMessageComponent should update flashMessage when new message is received" duration="15"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\settings-my-account\settings-my-account.component.spec.ts">
    <testCase name="SettingsMyAccountComponent should create" duration="621"/>
    <testCase name="SettingsMyAccountComponent should fetch user info correctly" duration="117"/>
    <testCase name="SettingsMyAccountComponent should call getAllUserInfos if token is found" duration="70"/>
    <testCase name="SettingsMyAccountComponent should toggle isUpdateUser" duration="74"/>
    <testCase name="SettingsMyAccountComponent should submit user updates correctly" duration="71"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\login\login.component.spec.ts">
    <testCase name="LoginComponent should create" duration="272"/>
    <testCase name="LoginComponent should call setAuthenticationState if isAuthenticated is true" duration="44"/>
    <testCase name="LoginComponent should call setAuthenticationState if isAuthenticated is false" duration="44"/>
    <testCase name="LoginComponent should call navigateToHomeWithMessage" duration="49"/>
    <testCase name="LoginComponent should call signInWithGoogle on googleSsoService when signInWithGoogle is called" duration="72"/>
    <testCase name="LoginComponent should handle OAuthEvent of type &quot;token_received&quot;" duration="69"/>
    <testCase name="LoginComponent should handle OAuthEvent of type &quot;token_received&quot; and handle errors" duration="31"/>
    <testCase name="LoginComponent should handle 403 error correctly" duration="28"/>
    <testCase name="LoginComponent should handle non-403 error correctly" duration="52"/>
    <testCase name="LoginComponent should call handleLoginSuccess on login success" duration="43"/>
    <testCase name="LoginComponent should call handleLoginError on login error" duration="39"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\transfer\transfer.component.spec.ts">
    <testCase name="TransferComponent should create the component" duration="224"/>
    <testCase name="TransferComponent should initialize with a token from cookie service" duration="44"/>
    <testCase name="TransferComponent should not modify folderName if it is not empty" duration="32"/>
    <testCase name="TransferComponent should generate a random folder name if it is empty" duration="31"/>
    <testCase name="TransferComponent should add valid email to the list and reset input state" duration="24"/>
    <testCase name="TransferComponent should not add invalid email and set error state" duration="17"/>
    <testCase name="TransferComponent should delete email from the list" duration="18"/>
    <testCase name="TransferComponent should upload files when requirements met" duration="19"/>
    <testCase name="TransferComponent should upload files when folder name is empty" duration="26"/>
    <testCase name="TransferComponent should show an error message if file or email is missing for upload" duration="21"/>
    <testCase name="TransferComponent should remove duplicate files when checkFile is called" duration="50"/>
    <testCase name="TransferComponent should return if email equal empty string" duration="18"/>
    <testCase name="TransferComponent should delete a file" duration="41"/>
    <testCase name="TransferComponent should delete all file" duration="22"/>
    <testCase name="TransferComponent should handle valid email" duration="18"/>
    <testCase name="TransferComponent should handle invalid email" duration="15"/>
    <testCase name="TransferComponent should handle email that already exists" duration="35"/>
    <testCase name="TransferComponent should clear all when upload is done" duration="17"/>
    <testCase name="TransferComponent should initialize uploader in constructor" duration="31"/>
    <testCase name="TransferComponent should use onProgressAll to update progress" duration="16"/>
    <testCase name="TransferComponent should reset loaderProgress and showOrUpload after timeout when loaderProgress is 100" duration="19"/>
    <testCase name="TransferComponent should return this.sizeAllFile in Ko" duration="26"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\logout\logout.component.spec.ts">
    <testCase name="LogoutComponent should create" duration="531"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\settings-subscription\settings-subscription.component.spec.ts">
    <testCase name="SettingsSubscriptionComponent should create" duration="590"/>
    <testCase name="SettingsSubscriptionComponent should call get Token from cookies" duration="59"/>
    <testCase name="SettingsSubscriptionComponent should call set user plan" duration="43"/>
    <testCase name="SettingsSubscriptionComponent should return appropriate plan text" duration="44"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\contact-us\contact-us.component.spec.ts">
    <testCase name="ContactUsComponent should create" duration="235"/>
    <testCase name="ContactUsComponent should return false if any input field is empty" duration="36"/>
    <testCase name="ContactUsComponent should return true if all input fields are non-empty" duration="78"/>
    <testCase name="ContactUsComponent should send an email successfully and navigate to home with a success message" duration="53"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\download\download.component.spec.ts">
    <testCase name="DownloadComponent should create" duration="223"/>
    <testCase name="DownloadComponent should initialize folderUrl and accessKey from route params" duration="18"/>
    <testCase name="DownloadComponent should fetch folder details on init" duration="21"/>
    <testCase name="DownloadComponent should download folder and show success message" duration="32"/>
    <testCase name="DownloadComponent should handle error and show error message" duration="18"/>
    <testCase name="DownloadComponent should set the correct image path in function of currentThemeSubject" duration="10"/>
    <testCase name="DownloadComponent should call the navigateAndShowFlashMessage if the folder dont exist" duration="11"/>
    <testCase name="DownloadComponent should set current theme on init" duration="11"/>
    <testCase name="DownloadComponent should create a Blob from data" duration="16"/>
    <testCase name="DownloadComponent should call downloadBlob when createABlobAndDownload is called" duration="17"/>
    <testCase name="DownloadComponent should navigate to &quot;/accueil&quot; and show a flash message" duration="15"/>
    <testCase name="DownloadComponent should download a Blob when downloadBlob is called" duration="20"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\services\httpClient\http-client.service.spec.ts">
    <testCase name="HttpClientService should be created" duration="156"/>
    <testCase name="HttpClientService should navigate to /accueil and show success flash message" duration="24"/>
    <testCase name="HttpClientService should perform login and return a token" duration="15"/>
    <testCase name="HttpClientService should perform Google login and return a token" duration="7"/>
    <testCase name="HttpClientService should perform registration and return a token" duration="17"/>
    <testCase name="HttpClientService should send a DELETE request to delete the folder" duration="6"/>
    <testCase name="HttpClientService should delete a user" duration="21"/>
    <testCase name="HttpClientService should update the user with PATCH request" duration="5"/>
    <testCase name="HttpClientService should validate an email with a token" duration="8"/>
    <testCase name="HttpClientService should get all folders by user ID" duration="7"/>
    <testCase name="HttpClientService should download a folder as a Blob" duration="13"/>
    <testCase name="HttpClientService should create a folder and return it" duration="16"/>
    <testCase name="HttpClientService should send a DELETE request to delete the user as admin" duration="6"/>
    <testCase name="HttpClientService should send an email" duration="25"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\validate-email\validate-email.component.spec.ts">
    <testCase name="ValidateEmailComponent should create" duration="158"/>
    <testCase name="ValidateEmailComponent should check if user is authenticated" duration="15"/>
    <testCase name="ValidateEmailComponent should verify email successfully" duration="15"/>
    <testCase name="ValidateEmailComponent should handle failed verification" duration="19"/>
    <testCase name="ValidateEmailComponent should call handleFailedVerification if validateEmail sent an error" duration="15"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\services\jwt-token\jwt-token.service.spec.ts">
    <testCase name="JwtTokenService should create" duration="46"/>
    <testCase name="JwtTokenService should return an empty string if the token in getDecodeToken is empty " duration="10"/>
    <testCase name="JwtTokenService should return the user first name" duration="5"/>
    <testCase name="JwtTokenService should return the user last name" duration="28"/>
    <testCase name="JwtTokenService should return the user id" duration="11"/>
    <testCase name="JwtTokenService should return the user email" duration="4"/>
    <testCase name="JwtTokenService should return the user role" duration="4"/>
    <testCase name="JwtTokenService should return the user plan" duration="5"/>
    <testCase name="JwtTokenService should return the user avatar" duration="8"/>
    <testCase name="JwtTokenService should return the user account status" duration="5"/>
    <testCase name="JwtTokenService should return the user authentication method" duration="9"/>
    <testCase name="JwtTokenService should return the token" duration="35"/>
    <testCase name="JwtTokenService should set the token" duration="3"/>
    <testCase name="JwtTokenService should decode the token" duration="4"/>
    <testCase name="JwtTokenService should get the decoded token" duration="4"/>
    <testCase name="JwtTokenService should check if the token is expired" duration="3"/>
    <testCase name="JwtTokenService should get all the user infos" duration="14"/>
    <testCase name="JwtTokenService should decode the token" duration="3"/>
    <testCase name="JwtTokenService should return the correct expiration time" duration="3"/>
    <testCase name="JwtTokenService should correctly identify if the token is expired" duration="3"/>
    <testCase name="JwtTokenService should correctly identify if the token is not expired" duration="36"/>
    <testCase name="JwtTokenService should return all user info correctly" duration="4"/>
    <testCase name="JwtTokenService should return the correct jwtToken value" duration="3"/>
    <testCase name="JwtTokenService should decode jwtToken and populate decodedToken when jwtToken is set" duration="3"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\footer\footer.component.spec.ts">
    <testCase name="FooterComponent should create" duration="162"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\services\sso\Google\google-sso.service.spec.ts">
    <testCase name="GoogleSsoService should be created" duration="30"/>
    <testCase name="GoogleSsoService signInWithGoogle should initialize OAuth flow" duration="5"/>
    <testCase name="GoogleSsoService isLoggedIn should check if user is logged in" duration="4"/>
    <testCase name="GoogleSsoService signOut should sign out the user and navigate to accueil if token exists" duration="6"/>
    <testCase name="GoogleSsoService signOut should do nothing if no token exists" duration="5"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\about\about.component.spec.ts">
    <testCase name="AboutComponent should create" duration="262"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\services\cookies\cookies.service.spec.ts">
    <testCase name="CookiesService should be created" duration="60"/>
    <testCase name="CookiesService should set a cookie" duration="20"/>
    <testCase name="CookiesService should get a cookie value by name" duration="4"/>
    <testCase name="CookiesService should return an empty string if the cookie does not exist" duration="44"/>
    <testCase name="CookiesService should remove leading spaces from cookie" duration="7"/>
    <testCase name="CookiesService should trim leading spaces from cookie" duration="12"/>
    <testCase name="CookiesService should correctly decode cookie" duration="3"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\subscriptions\subscriptions.component.spec.ts">
    <testCase name="SubscriptionsComponent should create" duration="200"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\dashboard-navbar\dashboard-navbar.component.spec.ts">
    <testCase name="DashboardNavbarComponent should create" duration="183"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\services\admin-autorize-guard\admin-autorize-guard.service.spec.ts">
    <testCase name="AdminAutorizeGuardService should be created" duration="33"/>
    <testCase name="AdminAutorizeGuardService canActivate should redirect to login if jwtToken is empty" duration="21"/>
    <testCase name="AdminAutorizeGuardService canActivate should return true if role is ADMIN" duration="4"/>
    <testCase name="AdminAutorizeGuardService canActivate should redirect to /accueil if role is USER" duration="4"/>
    <testCase name="AdminAutorizeGuardService canActivate should redirect to login for any other roles" duration="28"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\privacy-policy\privacy-policy.component.spec.ts">
    <testCase name="PrivacyPolicyComponent should create" duration="194"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\cookies-consent\cookies-consent.component.spec.ts">
    <testCase name="CookiesConsentComponent should create" duration="48"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\homepage\homepage.component.spec.ts">
    <testCase name="HomepageComponent should create" duration="164"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\services\autorize-guard\autorize-guard.service.spec.ts">
    <testCase name="AutorizeGuardService canActivate should redirect to login if jwtToken and cookie token are empty" duration="95"/>
    <testCase name="AutorizeGuardService canActivate should redirect to login if token is expired" duration="5"/>
    <testCase name="AutorizeGuardService canActivate should return true if token exists and is not expired" duration="21"/>
    <testCase name="AutorizeGuardService canActivate should redirect to login if any other case or error" duration="5"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\services\format-size-file\format-size.service.spec.ts">
    <testCase name="FormatSizeService should be created" duration="69"/>
    <testCase name="FormatSizeService should return 0.00 octets" duration="6"/>
    <testCase name="FormatSizeService should return 1.00 octets" duration="8"/>
    <testCase name="FormatSizeService should return 1.00 Ko" duration="5"/>
    <testCase name="FormatSizeService should return 1.00 Mo" duration="9"/>
    <testCase name="FormatSizeService should return 1.00 Go" duration="3"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\not-found\not-found.component.spec.ts">
    <testCase name="NotFoundComponent should create" duration="128"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\dashboard-all-transfer\dashboard-all-transfer.component.spec.ts">
    <testCase name="DashboardAllTransferComponent should create" duration="177"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\cgu\cgu.component.spec.ts">
    <testCase name="CguComponent should create" duration="234"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\dashboard-one-user\dashboard-one-user.component.spec.ts">
    <testCase name="DashboardOneUserComponent should create" duration="209"/>
    <testCase name="DashboardOneUserComponent should get query parameters correctly" duration="32"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\dashboard-one-support\dashboard-one-support.component.spec.ts">
    <testCase name="DashboardOneSupportComponent should create" duration="119"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\services\theme-service\theme-service.service.spec.ts">
    <testCase name="ThemeServiceService should be created" duration="76"/>
    <testCase name="ThemeServiceService should save theme to local storage" duration="7"/>
    <testCase name="ThemeServiceService should toggle theme" duration="17"/>
    <testCase name="ThemeServiceService should get current theme" duration="16"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\settings-navbar\settings-navbar.component.spec.ts">
    <testCase name="SettingsNavbarComponent should create" duration="163"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\services\http-interceptor\http-interceptor.service.spec.ts">
    <testCase name="HttpInterceptorService should add Authorization header when token is present" duration="20"/>
    <testCase name="HttpInterceptorService should not add Authorization header when token is not present" duration="2"/>
    <testCase name="HttpInterceptorService should handle 401 error by deleting token and clearing session storage" duration="6"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\services\local-storage\local-storage.service.spec.ts">
    <testCase name="LocalStorageService should be created" duration="5"/>
    <testCase name="LocalStorageService should set item in local storage" duration="3"/>
    <testCase name="LocalStorageService should get item from local storage" duration="2"/>
    <testCase name="LocalStorageService should remove item from local storage" duration="1"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\services\flash-message\flash-message.service.spec.ts">
    <testCase name="FlashMessageService should be created" duration="28"/>
    <testCase name="FlashMessageService should add message and emit it" duration="8"/>
    <testCase name="FlashMessageService should handle string type correctly" duration="4"/>
    <testCase name="FlashMessageService should delete flash message" duration="4"/>
    <testCase name="FlashMessageService should add a message with a given MessageType" duration="3"/>
    <testCase name="FlashMessageService should add a message with a given string type" duration="3"/>
    <testCase name="FlashMessageService should default to INFO type for an unrecognized string type" duration="3"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\dashboard-one-transfer\dashboard-one-transfer.component.spec.ts">
    <testCase name="DashboardOneTransferComponent should create" duration="83"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\dashboard-all-users\dashboard-all-users.component.spec.ts">
    <testCase name="DashboardAllUsersComponent should create" duration="108"/>
  </file>
  <file path="C:\Users\thiba\Desktop\t-flow\src\app\dashboard-all-support\dashboard-all-support.component.spec.ts">
    <testCase name="DashboardAllSupportComponent should create" duration="70"/>
  </file>
</testExecutions>